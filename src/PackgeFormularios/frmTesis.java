
package PackgeFormularios;

import PackgeConexionSQL.ConexionMySQL;
//import PackgeConexionSQL.ConexionSQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class frmTesis extends javax.swing.JFrame {

    ConexionMySQL cc=new ConexionMySQL();
    Connection con=cc.conexion();
    
    public frmTesis() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(getBackground());
        mostrarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbCarrera = new javax.swing.JComboBox<>();
        txtTema = new javax.swing.JTextField();
        txtSustentantes = new javax.swing.JTextField();
        txtAsesor = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtIDTesis = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtUniversidad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTesis = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        jLabel1.setText("Tema");

        jLabel2.setText("Sustentantes");

        jLabel3.setText("Carrera");

        jLabel4.setText("Asesor");

        jLabel5.setText("Fecha");

        cbCarrera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lic. En Informatica", "Lic. Letras Mencion Educacion", "Lic. Educacion Basica", "Lic. Contabilidad", "Lic. En Produccion Animal", "Ingenieria Civil", "Ingenieria en Agronomía", "Lic. Educacion Física" }));

        txtTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTemaActionPerformed(evt);
            }
        });

        txtSustentantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSustentantesActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Tesis");

        jLabel9.setText("ID");

        jLabel10.setText("Universidad");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(1, 1, 1))
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTema)
                            .addComponent(txtSustentantes)
                            .addComponent(cbCarrera, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAsesor)
                            .addComponent(txtIDTesis)
                            .addComponent(txtFecha)
                            .addComponent(txtUniversidad))))
                .addGap(26, 26, 26))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIDTesis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(txtUniversidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSustentantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtAsesor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar)
                    .addComponent(btnActualizar))
                .addContainerGap())
        );

        tablaTesis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaTesis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTesisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaTesis);

        jLabel6.setText("Buscar Tema de Tesis");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 204));
        jLabel7.setText("<--Volver al Menu");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSustentantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSustentantesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSustentantesActionPerformed

    private void txtTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTemaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTemaActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        insertarDatos();
        limpiarCajas();
        mostrarDatos();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarDatos();
        limpiarCajas();
        mostrarDatos();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarCajas();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tablaTesisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTesisMouseClicked
        
        int filaSeleccionada=tablaTesis.rowAtPoint(evt.getPoint());
        
        txtIDTesis.setText(tablaTesis.getValueAt(filaSeleccionada, 0).toString());
        txtUniversidad.setText(tablaTesis.getValueAt(filaSeleccionada, 1).toString());
        txtTema.setText(tablaTesis.getValueAt(filaSeleccionada, 2).toString());
        txtSustentantes.setText(tablaTesis.getValueAt(filaSeleccionada, 3).toString());
        cbCarrera.setSelectedItem(tablaTesis.getValueAt(filaSeleccionada, 4));
        txtAsesor.setText(tablaTesis.getValueAt(filaSeleccionada, 5).toString());
        txtFecha.setText(tablaTesis.getValueAt(filaSeleccionada, 6).toString());       
        
        
    }//GEN-LAST:event_tablaTesisMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizarDatos();
        limpiarCajas();
        mostrarDatos();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        filtrarDatos(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        setVisible(false);
        frmMenu me=new frmMenu();
        me.setVisible(true);
    }//GEN-LAST:event_jLabel7MouseClicked

    
//**Metodos para manipular datos *************************************************:
    
    //Metodo para insertar datos en la tabala alumnos de la base de datos escuela:
    public void insertarDatos(){
        
        try {
            
           String SQL="insert into tesis (idTesis,universidad,tema,sustentantes,carrera,asesor,fecha) values (?,?,?,?,?,?,?)";
            PreparedStatement pst=con.prepareStatement(SQL);
            
            pst.setInt(1,Integer.parseInt(txtIDTesis.getText()));
            pst.setString(2,txtUniversidad.getText());
            pst.setString(3,txtTema.getText());
            pst.setString(4, txtSustentantes.getText());
            
            int seleccionado=cbCarrera.getSelectedIndex();
            pst.setString(5, cbCarrera.getItemAt(seleccionado));
            
            pst.setString(6, txtAsesor.getText());            
            
            pst.setString(7, txtFecha.getText());
            
            pst.execute();
            JOptionPane.showMessageDialog(null, "Registro Exitoso");
            
            
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, "Error Registro"+e.getMessage());
        }
        
    }
    
    //Metodo para limpiar cajas de textos del formulario:
    
    public void limpiarCajas(){
        txtIDTesis.setText("");
        txtUniversidad.setText("");
        txtTema.setText("");
        txtSustentantes.setText("");
        txtAsesor.setText("");
        cbCarrera.setSelectedItem(null);
        txtFecha.setText("");
    }
    
    //Metodo para Motrar datos en la tabla:
    
    public void mostrarDatos(){
        
        String[] titulos={"ID","Universidad","Tema","Sustentantes", "Carrera","Asesor","Fecha"};
        String[] registros=new String[7];
        
        DefaultTableModel modelo=new DefaultTableModel(null,titulos);
        
        String SQL="select * from tesis";
        
        try {
            
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(SQL);
            
            while (rs.next()){
                
                registros[0]=rs.getString("idTesis");
                registros[1]=rs.getString("universidad");
                registros[2]=rs.getString("tema");
                registros[3]=rs.getString("sustentantes");
                registros[4]=rs.getString("carrera");
                registros[5]=rs.getString("asesor");
                registros[6]=rs.getString("fecha");
                
                modelo.addRow(registros);
            }
            tablaTesis.setModel(modelo);
            
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, "Error al mostrar datos"+e.getMessage());
        }        
        
    }
    
    //Metodo para actualizar datos:
    
    public void actualizarDatos(){
        
        try {
            
           String SQL="update tesis set idTesis=?,universidad=?,tema=?,sustentantes=?,carrera=?,fecha=? where idTesis=?";
            
           int filaseleccionada=tablaTesis.getSelectedRow();
           String dao=(String) tablaTesis.getValueAt(filaseleccionada, 0);
           
           
            PreparedStatement pst=con.prepareStatement(SQL);
            
            pst.setInt(1,Integer.parseInt(txtIDTesis.getText()));
            pst.setString(2, txtUniversidad.getText());
            pst.setString(3, txtTema.getText());
            pst.setString(4, txtSustentantes.getText());
            
            int seleccionado=cbCarrera.getSelectedIndex();
            pst.setString(5, cbCarrera.getItemAt(seleccionado));
            
            pst.setString(6, txtAsesor.getText());       
            pst.setString(7, txtFecha.getText());
            
            pst.setString(6, dao);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Registro Editado Exitosamente");
            
            
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, "Error de Edicion"+e.getMessage());
        }
        
    }
    
    
    //Metodo para eliminar datos:
    public void eliminarDatos(){
        
        int filaSeleccionada=tablaTesis.getSelectedRow();
        
        try {
            String SQL="delete from tesis where idTesis="+tablaTesis.getValueAt(filaSeleccionada, 0);
            Statement st=con.createStatement();
            int n=st.executeUpdate(SQL);
            
            if (n>=0){
                JOptionPane.showMessageDialog(null, "Registro Eliminado");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al Eliminar Registros"+e.getMessage());
        }
    }
    
    //Metodo para filtrar datos:
    public void filtrarDatos(String valor){
        
        String[] titulos={"ID","Universidad","Tema","Sustentantes", "Carrera","Asesor","Fecha"};
        String[] registros=new String[7];
        
        DefaultTableModel modelo=new DefaultTableModel(null,titulos);
        
        String SQL="select * from tesis where tema like '%"+valor+"%'";
        
        try {
            
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(SQL);
            
            while (rs.next()){
                
                registros[0]=rs.getString("idTesis");
                registros[1]=rs.getString("universidad");
                registros[2]=rs.getString("tema");
                registros[3]=rs.getString("sustentantes");
                registros[4]=rs.getString("carrera");
                registros[5]=rs.getString("asesor");
                registros[6]=rs.getString("fecha");
                
                modelo.addRow(registros);
            }
            tablaTesis.setModel(modelo);
            
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, "Error al mostrar datos"+e.getMessage());
        }        
        
    }
    
    
    //Fin metodos de manipulacion de datos************************************************************************************
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTesis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTesis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTesis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTesis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTesis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cbCarrera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaTesis;
    private javax.swing.JTextField txtAsesor;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtIDTesis;
    private javax.swing.JTextField txtSustentantes;
    private javax.swing.JTextField txtTema;
    private javax.swing.JTextField txtUniversidad;
    // End of variables declaration//GEN-END:variables
}
